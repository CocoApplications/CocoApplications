{"version":3,"sources":["gradient_boosting_explained.js"],"names":[],"mappings":"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","file":"gradient_boosting_explained-compiled.js","sourcesContent":["// TODO оптимизация графика gb-построения. Он тормозит.\n// TODO поговорить про классификацию?\n// TODO процесс построения одного дерева внутри бустинга?\n\n\"use strict\";\n\nlet base_3d_layout = {\n    scene: {\n        // axes' names are UTFed, since plotly.js doesn't support latex in 3d.\n        xaxis: {title: 'x₁'},\n        yaxis: {title: 'x₂'},\n        zaxis: {title: 'y '},\n        // also I found no good way for isometric projection in plotly.js\n        camera: {\n            eye: {x: 1.25, y: 1.25, z: 1.25}\n        }\n    },\n    margin: {l: 0, r: 20, b: 0, t: 0}\n};\n\nlet one_column_3d_layout = {\n    autosize: false,\n    width: 400,\n    height: 400\n};\n\nfor (let attr_name in base_3d_layout) {\n    one_column_3d_layout[attr_name] = base_3d_layout[attr_name];\n}\n\nclass DatasetSelector {\n    constructor(wrapper_div, on_dataset_change, n_ticks = 50) {\n        // everything is computed on the same grid\n        this.n_ticks = n_ticks;\n        this.axis_ticks = [];\n        for (let x_tick = 0; x_tick < n_ticks; x_tick++) {\n            this.axis_ticks.push((x_tick + 0.5) / n_ticks);\n        }\n        this.datasets = DatasetSelector.collect_toy_datasets(this.axis_ticks);\n\n        this.wrapper_div = wrapper_div;\n        this.color_scaler_heatmap = Utils.create_fast_color_scaler([\"#28a7cd\", \"#e8eaeb\", \"#f5b362\"], 30);\n\n        for (let i = 0; i < this.datasets.length; i++) {\n            let canvas = document.createElement('canvas');\n            canvas.width = n_ticks;\n            canvas.height = n_ticks;\n            this.wrapper_div.appendChild(canvas);\n            // hover for canvas\n            canvas.onclick = () => {\n                this.select_dataset(i);\n            };\n            Utils.plot_function_to_canvas(canvas, this.datasets[i][2], this.color_scaler_heatmap);\n        }\n        this.selected_dataset = 0;\n        // trivial event\n        this.on_dataset_change = on_dataset_change;\n    }\n\n    get_current_dataset() {\n        return this.datasets[this.selected_dataset];\n    }\n\n    select_dataset(selected_dataset) {\n        this.selected_dataset = selected_dataset;\n        this.redraw();\n        this.on_dataset_change();\n    }\n\n    redraw() {\n        // seemingly, nothing to change\n        return;\n    }\n\n    static approximated_function_pyramid(x1, x2) {\n        return Math.sin(4 * x1) * Math.cos(3 * x2) * 0.5;\n    }\n\n    static approximated_function_teardrop(x1, x2) {\n        x1 -= 0.3;\n        x2 -= 0.7;\n        let r = Math.sqrt(x1 * x1 + x2 * x2) * 10;\n        return 0.5 * Math.cos(r);\n        //return Math.cos(r) / (2 + r / 5.);\n    }\n\n    static approximated_function_wall(x1, x2) {\n        return (x1 + x2 < 1) ? 0.5 : -0.5;\n    }\n\n    static approximated_function_xor(x1, x2) {\n        return (x1 - 0.4) * (x2 - 0.6) > 0 ? 0.5 : -0.5;\n    }\n\n    static approximated_function_diffgauss(x1, x2) {\n        let shift = 0.1;\n        let gauss1x = x1 - 0.5 + shift;\n        let gauss1y = x2 - 0.5 + shift;\n        let gauss2x = x1 - 0.5 - shift;\n        let gauss2y = x2 - 0.5 - shift;\n        return Math.exp(-7 * (gauss1x * gauss1x + gauss1y * gauss1y))\n            - Math.exp(-7 * (gauss2x * gauss2x + gauss2y * gauss2y));\n    }\n\n    static collect_toy_datasets(axis_ticks) {\n        let z_grids = [];\n\n        z_grids.push(Utils.compute_grid_for_function(axis_ticks, DatasetSelector.approximated_function_pyramid));\n        z_grids.push(Utils.compute_grid_for_function(axis_ticks, DatasetSelector.approximated_function_teardrop));\n        z_grids.push(Utils.compute_grid_for_function(axis_ticks, DatasetSelector.approximated_function_wall));\n        z_grids.push(Utils.compute_grid_for_function(axis_ticks, DatasetSelector.approximated_function_diffgauss));\n        z_grids.push(Utils.compute_grid_for_function(axis_ticks, DatasetSelector.approximated_function_xor));\n\n        let train_datasets = [];\n\n        for (let i = 0; i < z_grids.length; i++) {\n            let z_grid = z_grids[i];\n            let [trainX, trainY] = Utils.convert_grid_to_training(z_grid, axis_ticks);\n            train_datasets.push([trainX, trainY, z_grid]);\n        }\n        return train_datasets;\n    }\n}\n\nclass DecisionTreeVisualization {\n    constructor() {\n        this.main_div = document.getElementById('tree_visualization');\n        this.tree_depth_control = document.getElementById('tree_depth_control');\n        this.tree_depth_display = document.getElementById('tree_depth_display');\n        this.look_from_above_button = document.getElementById('tree_look_from_above_control');\n        this.dataset_control = document.getElementById('tree_dataset_select_control');\n\n        this.tree_depth_control.oninput = () => {\n            this.redraw()\n        };\n        this.look_from_above_button.onclick = () => {\n            this.look_from_above();\n        };\n        this.dataset = new DatasetSelector(this.dataset_control, () => {\n            this.redraw()\n        });\n        let ticks = this.dataset.axis_ticks;\n        Plotly.newPlot(this.main_div,\n            [Utils.get_3d_plot(ticks, 0.95), Utils.get_3d_plot(ticks, 1.0)],\n            clone(base_3d_layout));\n        this.redraw();\n    }\n\n    compute_tree_prediction(depth) {\n        let [trainX, trainY, z_grid] = this.dataset.get_current_dataset();\n        let tree = new DecisionTreeRegressor(trainX, trainY, depth);\n        return Utils.compute_grid_for_function(this.dataset.axis_ticks, function (x1, x2) {\n            return tree.predict_one_event([x1, x2])\n        });\n    }\n\n    look_from_above() {\n        let new_layout = clone(base_3d_layout);\n        new_layout['scene']['camera'] = {eye: {x: 0.1, y: 0.1, z: Math.sqrt(3) * 1.25}};\n        // Plotly.relayout doesn't change camera position. So I have to recreate the plot.\n        Plotly.newPlot(this.main_div, this.main_div.data, new_layout);\n        this.redraw();\n    }\n\n    redraw() {\n        let new_depth = this.tree_depth_control.value;\n        this.tree_depth_display.innerHTML = new_depth.toString();\n        let tree_predictions = this.compute_tree_prediction(new_depth);\n        Plotly.restyle(this.main_div, {z: [tree_predictions]}, 1);\n        let function_z_grid = this.dataset.get_current_dataset()[2];\n        Plotly.restyle(this.main_div, {z: [function_z_grid]}, 0);\n\n    }\n}\nvar tree_visualization = new DecisionTreeVisualization(50);\n\n\nclass GradientBoostingInitialVisualization {\n    constructor() {\n        this.main_div = document.getElementById('gb_simple_visualization');\n        this.depth_control = document.getElementById('gb_simple_depth_control');\n        this.depth_display = document.getElementById('gb_simple_depth_display');\n        this.depth_control.oninput = () => {\n            this.redraw();\n        };\n        //this.computed_results = [];\n\n        this.dataset_control = document.getElementById('gb_simple_dataset_select_control');\n        this.dataset = new DatasetSelector(this.dataset_control, () => {\n            this.redraw()\n        });\n\n        let ticks = this.dataset.axis_ticks;\n        Plotly.newPlot(this.main_div,\n            [Utils.get_3d_plot(ticks, 0.95), Utils.get_3d_plot(ticks, 1.0)],\n            clone(base_3d_layout));\n\n        this.redraw();\n    }\n\n    compute_boosting_prediction(depth) {\n        let [trainX, trainY, z_grid] = this.dataset.get_current_dataset();\n        // saves already computed values\n        //if (this.computed_results[depth] === undefined) {\n        let n_estimators = 100;\n        let learning_rate = 0.1;\n        let gb_reg = new GradientBoostingRegressor(trainX, trainY, n_estimators, depth, learning_rate);\n        return Utils.compute_grid_for_function(this.dataset.axis_ticks, function (x1, x2) {\n            return gb_reg.predict_one_event([x1, x2])\n        });\n        //}\n        //return this.computed_results[depth];\n    }\n\n    redraw() {\n        let depth = this.depth_control.value;\n        this.depth_display.innerHTML = depth.toString();\n        Plotly.restyle(this.main_div, {z: [this.compute_boosting_prediction(depth)]}, 1);\n        let function_z_grid = this.dataset.get_current_dataset()[2];\n        Plotly.restyle(this.main_div, {z: [function_z_grid]}, 0);\n    }\n}\nvar gradient_boosting_initial_visualization = new GradientBoostingInitialVisualization();\n\n\nclass GradientBoostingBuildingVisuzalization {\n    constructor() {\n        this.left_div = document.getElementById('gb_build_visualization_prediction');\n        this.right_div = document.getElementById('gb_build_visualization_residual');\n\n        this.depth_control = document.getElementById('gb_build_depth_control');\n        this.depth_display = document.getElementById('gb_build_depth_display');\n\n        this.estimator_control = document.getElementById('gb_build_estimator_control');\n        this.estimator_display = document.getElementById('gb_build_estimator_display');\n\n        this.dataset_control = document.getElementById('gb_build_dataset_select_control');\n\n        this.trained_gb_regressors = Utils.create_2D_array(10);\n\n        this.depth_control.oninput = () => {\n            this.redraw();\n        };\n        this.estimator_control.oninput = () => {\n            this.redraw();\n        };\n\n        this.dataset = new DatasetSelector(this.dataset_control, () => {\n            this.redraw()\n        });\n        let ticks = this.dataset.axis_ticks;\n\n        // target and boosting predictions\n        Plotly.newPlot(this.left_div,\n            [Utils.get_3d_plot(ticks, 0.95), Utils.get_3d_plot(ticks, 1.0)],\n            one_column_3d_layout);\n\n        Plotly.newPlot(this.right_div,\n            [Utils.get_3d_plot(ticks, 0.95), Utils.get_3d_plot(ticks, 1.0)],\n            one_column_3d_layout);\n\n        // target and boosting predictions\n        //Plotly.newPlot(this.left_div, [clone(function_plot), clone(prediction3d_plot)], one_column_3d_layout);\n        // residual and tree predictions\n        //Plotly.newPlot(this.right_div, [clone(function_plot), clone(prediction3d_plot)], one_column_3d_layout);\n\n        this.redraw();\n    }\n\n    compute_prediction_and_residual(depth, estimator) {\n        let [trainX, trainY, function_z_grid] = this.dataset.get_current_dataset();\n        let axis_ticks = this.dataset.axis_ticks;\n        let n_ticks = axis_ticks.length;\n        let selected_dataset = this.dataset.selected_dataset;\n        if (this.trained_gb_regressors[depth][selected_dataset] === undefined) {\n            // save trained regressor\n            let n_estimators = 12;\n            let learning_rate = 0.3;\n            this.trained_gb_regressors[depth][selected_dataset] =\n                new GradientBoostingRegressor(trainX, trainY, n_estimators, depth, learning_rate);\n        }\n        let gb_reg = this.trained_gb_regressors[depth][selected_dataset];\n        let tree = gb_reg.trees[estimator];\n\n        let truncated_predict = function (x1, x2) {\n            return gb_reg.predict_one_event([x1, x2], estimator)\n        };\n        let gb_truncated_predictions = Utils.compute_grid_for_function(axis_ticks, truncated_predict);\n        let tree_predict = function (x1, x2) {\n            return tree.predict_one_event([x1, x2])\n        };\n        let tree_predictions = Utils.compute_grid_for_function(axis_ticks, tree_predict);\n\n        let residual = Utils.create_2D_array(n_ticks);\n        for (let x_tick = 0; x_tick < n_ticks; x_tick++) {\n            for (let y_tick = 0; y_tick < n_ticks; y_tick++) {\n                residual[x_tick][y_tick] = function_z_grid[x_tick][y_tick] - gb_truncated_predictions[x_tick][y_tick];\n            }\n        }\n        return [gb_truncated_predictions, residual, tree_predictions];\n    }\n\n    redraw() {\n        let estimator = this.estimator_control.value;\n        let depth = this.depth_control.value;\n        this.estimator_display.innerHTML = estimator.toString();\n        this.depth_display.innerHTML = depth.toString();\n\n        let [prediction, residual, tree_prediction] = this.compute_prediction_and_residual(depth, estimator);\n        let function_z_grid = this.dataset.get_current_dataset()[2];\n        Plotly.restyle(this.left_div, {z: [function_z_grid]}, 0);\n        Plotly.restyle(this.left_div, {z: [prediction]}, 1);\n        Plotly.restyle(this.right_div, {z: [tree_prediction]}, 1);\n        // this one takes damn long. I don't know why\n        Plotly.restyle(this.right_div, {z: [residual]}, 0);\n    }\n}\nvar gradient_boosting_visualization = new GradientBoostingBuildingVisuzalization();\n\n\n// Bind unfolding of descriptions\n$('.explanation-preview').on('click', function () {\n    let name = $(this).attr('data-explained');\n    let found = $.find('.explanation-content[data-explained=' + name + ']');\n    $(found).fadeIn(400);\n});\n"]}